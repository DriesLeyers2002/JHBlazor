@page "/stock"
@using Jeugdhuis.Models
@using Microsoft.EntityFrameworkCore
@inject DialogService DialogService
@inject NotificationService NotificationService
@inject AppDbContext DbContext
@rendermode InteractiveServer

<h3>Stock</h3>

<RadzenButton Text="Voeg Drankje Toe" Click=@ShowAddDrinkDialog Icon="add" />

<RadzenDataGrid @ref="grid" Data="@stocks" TItem="StockItem" RowSelect="@OnRowSelect" ColumnWidth="200px">
    <Columns>
        <RadzenDataGridColumn TItem="StockItem" Property="Drink.Name" Title="Naam" Width="50px" />
        <RadzenDataGridColumn TItem="StockItem" Property="Quantity" Title="Voorraad" Width="50px" />
    </Columns>
</RadzenDataGrid>

@code {
    private RadzenDataGrid<StockItem> grid;
    private List<StockItem> stocks;

    protected override async Task OnInitializedAsync()
    {
        stocks = await DbContext.StockItems.Include(stockItem => stockItem.Drink).Where(x => x.Drink.IsActive).ToListAsync();
    }

    private async Task ShowAddDrinkDialog()
    {
        StockItem result = await DialogService.OpenAsync<AddDrinkDialog>("Voeg Drankje Toe", null,
            new DialogOptions() { Width = "500px", Height = "400px" });

        if (result != null && result is StockItem)
        {
            await AddDrinkToStock(result);
        }
    }

    private async Task AddDrinkToStock(StockItem newStockItem)
    {
        DbContext.StockItems.Add(newStockItem);
        await DbContext.SaveChangesAsync();
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Drankje toegevoegd", Detail = "Het drankje is succesvol toegevoegd aan de stock." });
        
        stocks = await DbContext.StockItems.ToListAsync();
    }

    private void OnRowSelect(StockItem item)
    {
        //Hier komt nog een manuele edit
    }
}
